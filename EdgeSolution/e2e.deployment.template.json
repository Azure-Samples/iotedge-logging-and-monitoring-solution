{
  "modulesContent": {
    "$edgeAgent": {
      "properties.desired": {
        "schemaVersion": "1.0",
        "runtime": {
          "type": "docker",
          "settings": {
            "minDockerVersion": "v1.25",
            "loggingOptions": ""
          }
        },
        "systemModules": {
          "edgeAgent": {
            "type": "docker",
            "settings": {
              "image": "mcr.microsoft.com/azureiotedge-agent:1.1.2",
              "createOptions": "{}"
            }
          },
          "edgeHub": {
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "settings": {
              "image": "mcr.microsoft.com/azureiotedge-hub:1.1.2",
              "createOptions": "{\"HostConfig\":{\"PortBindings\":{\"5671/tcp\":[{\"HostPort\":\"5671\"}],\"8883/tcp\":[{\"HostPort\":\"8883\"}],\"443/tcp\":[{\"HostPort\":\"443\"}]}}}"
            }
          }
        },
        "modules": {
          "tempSensor": {
            "version": "1.0",
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "settings": {
              "image": "kaizentm/iotsample-simulatedtemperaturesensor:1.0.0",
              "createOptions": "{}"
            },
            "env": {
              "MessageDelay": {
                "value": "00:00:05"
              },
              "OTLP_ENDPOINT": {
                "value": "http://opentelemetrycollector:4317"
              },
              "LOGGING_LEVEL": {
                "value": "Information"
              },
              "TRACE_SAMPLE_RATIO": {
                "value": "0"
              }                                
            }
          },
          "FilterModule": {
            "version": "1.0",
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "settings": {
              "image": "kaizentm/iotsample-filtermodule:1.0.0",
              "createOptions": "{}"
            },
            "env": {
              "OTLP_ENDPOINT": {
                "value": "http://opentelemetrycollector:4317"
              },
              "LOGGING_LEVEL": {
                "value": "Information"
              },
              "TRACE_SAMPLE_RATIO": {
                "value": "0"
              }                                                              
            }            
          },
          "OpenTelemetryCollector": {
            "version": "1.0",
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "settings": {
              "image": "kaizentm/iotsample-opentelemetrycollector:1.0.0"
            },
            "env": {
              "APPINSIGHTS_INSTRUMENTATION_KEY": {
                "value": "${APPINSIGHTS_INSTRUMENTATION_KEY}"
              },
              "JAEGER_ENDPOINT": {
                "value": "${JAEGER_ENDPOINT}"
              }
            }              
          },
          "IoTEdgeMetricsCollector": {
            "settings": {
              "image": "mcr.microsoft.com/azureiotedge-metrics-collector:1.0",
              "createOptions": "{}"
            },
            "type": "docker",
            "env": {
              "ResourceId": {
                "value": "${IOTHUB_ARM_RESOURCEID}"
              },
              "UploadTarget": {
                "value": "AzureMonitor"
              },
              "LogAnalyticsWorkspaceId": {
                "value": "${LOG_ANALYTICS_WSID}"
              },
              "LogAnalyticsSharedKey": {
                "value": "${LOG_ANALYTICS_SHARED_KEY}"
              },
              "OtherConfig": {
                "value": "<See https://aka.ms/edgemon-config for details>"
              }
            },
            "status": "running",
            "restartPolicy": "always",
            "version": "1.0"
          }
        }
      }
    },
    "$edgeHub": {
      "properties.desired": {
        "schemaVersion": "1.0",
        "routes": {
          "sensorToFilterModule": "FROM /messages/modules/tempSensor/outputs/temperatureOutput INTO BrokeredEndpoint(\"/modules/FilterModule/inputs/input1\")",
          "FilterModuleToIoTHub": "FROM /messages/modules/FilterModule/outputs/* INTO $upstream"
        },
        "storeAndForwardConfiguration": {
          "timeToLiveSecs": 7200
        }
      }
    }
  }
}